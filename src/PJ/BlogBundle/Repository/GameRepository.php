<?php

namespace PJ\BlogBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use InvalidArgumentException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
/**
 * GameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GameRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function findFull($id){
        $qb = $this->createQueryBuilder('g');
        $qb->where('g.id=:id')
            ->setParameter('id', $id)
            ->leftJoin('g.gallery','gallery')
            ->addSelect('gallery')
            ->leftJoin('gallery.images','i')
                ->addSelect('i');
        
        return $qb->getQuery()->getOneOrNullResult();
    }
    
    public function getGameWithConsole($console)
    {          
        $query = $this
        ->createQueryBuilder('g')
        ->leftJoin('g.console', 'console')
        ->where('console.name = :console')
        ->setParameter('console', $console)
        ->addSelect('console')
        ->orderBy('g.id', 'DESC'); 
 
        return $query
        ->getQuery()
        ->getResult();       
    }
    
    public function search($keyword,$year,  \PJ\BlogBundle\Entity\Console $console = null){
        $query = $this
            ->createQueryBuilder('g');
        
        $andX = $query->expr()->andX();
        
        if (null !== $keyword){
            $andX->add('g.title LIKE :keyword');
            $query->setParameter('keyword','%'.$keyword.'%');
        }
        
        if (null !== $year && strlen($year)){
            $andX->add('g.year = :year');
            $query->setParameter('year',$year);
        }
////        
        if (null !== $console){

            $query->leftJoin('g.console', 'console')
                
                ->addSelect('console');
            
            $andX->add('console= :console');
             $query->setParameter('console', $console);
        }
        
        
        $query->where($andX);
            
        $query->orderBy('g.id', 'DESC'); 

            return $query
            ->getQuery()
            ->getResult();       
    }
  
}
